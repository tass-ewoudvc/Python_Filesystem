
Ewouds-MacBook-Pro:~ ewoud$ python3
Python 3.4.2 (default, Jan  7 2015, 11:54:58) 
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> 3 + 4+2j
(7+2j)
>>> 4+2j - 7-8j
(-3-6j)
>>> 1/3
0.3333333333333333
>>> 2**8
256
>>> x = "invent a cool string"
>>> len(x)
20
>>> x[4]
'n'
>>> x[-2]
'n'
>>> x[-5:]
'tring'
>>> ord(x[0])
105
>>> 
>>> 
>>> x = "Monty Python"
>>> y = [ letter for letter in x ]
>>> y
['M', 'o', 'n', 't', 'y', ' ', 'P', 'y', 't', 'h', 'o', 'n']
>>> y[4]
'y'
>>> z = [letter.upper() for letter in y]
>>> z
['M', 'O', 'N', 'T', 'Y', ' ', 'P', 'Y', 'T', 'H', 'O', 'N']
>>> 
>>> capitals = { "Brugge" : 8000, "Gent" : 9000 }
>>> capitals['Gent']
9000
>>> capitals['Oostende']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: 'Oostende'
>>> capitals.keys()
dict_keys(['Gent', 'Brugge'])
>>> x = [[code, city] for city,code in capitals.items()]
>>> x
[[9000, 'Gent'], [8000, 'Brugge']]
>>> y = dict(x)
>>> y
{9000: 'Gent', 8000: 'Brugge'}
>>> 
>>> t = [(celsius, celsius*9/5+32) for celsius in range(-10,50)]
>>> t
[(-10, 14.0), (-9, 15.8), (-8, 17.6), (-7, 19.4), (-6, 21.2), (-5, 23.0), (-4, 24.8), (-3, 26.6), (-2, 28.4), (-1, 30.2), (0, 32.0), (1, 33.8), (2, 35.6), (3, 37.4), (4, 39.2), (5, 41.0), (6, 42.8), (7, 44.6), (8, 46.4), (9, 48.2), (10, 50.0), (11, 51.8), (12, 53.6), (13, 55.4), (14, 57.2), (15, 59.0), (16, 60.8), (17, 62.6), (18, 64.4), (19, 66.2), (20, 68.0), (21, 69.8), (22, 71.6), (23, 73.4), (24, 75.2), (25, 77.0), (26, 78.8), (27, 80.6), (28, 82.4), (29, 84.2), (30, 86.0), (31, 87.8), (32, 89.6), (33, 91.4), (34, 93.2), (35, 95.0), (36, 96.8), (37, 98.6), (38, 100.4), (39, 102.2), (40, 104.0), (41, 105.8), (42, 107.6), (43, 109.4), (44, 111.2), (45, 113.0), (46, 114.8), (47, 116.6), (48, 118.4), (49, 120.2)]
>>> 
>>> t = [(fahrenheit, (fahrenheit-32)*5/9) for fahrenheit in range(100)]
>>> t
[(0, -17.77777777777778), (1, -17.22222222222222), (2, -16.666666666666668), (3, -16.11111111111111), (4, -15.555555555555555), (5, -15.0), (6, -14.444444444444445), (7, -13.88888888888889), (8, -13.333333333333334), (9, -12.777777777777779), (10, -12.222222222222221), (11, -11.666666666666666), (12, -11.11111111111111), (13, -10.555555555555555), (14, -10.0), (15, -9.444444444444445), (16, -8.88888888888889), (17, -8.333333333333334), (18, -7.777777777777778), (19, -7.222222222222222), (20, -6.666666666666667), (21, -6.111111111111111), (22, -5.555555555555555), (23, -5.0), (24, -4.444444444444445), (25, -3.888888888888889), (26, -3.3333333333333335), (27, -2.7777777777777777), (28, -2.2222222222222223), (29, -1.6666666666666667), (30, -1.1111111111111112), (31, -0.5555555555555556), (32, 0.0), (33, 0.5555555555555556), (34, 1.1111111111111112), (35, 1.6666666666666667), (36, 2.2222222222222223), (37, 2.7777777777777777), (38, 3.3333333333333335), (39, 3.888888888888889), (40, 4.444444444444445), (41, 5.0), (42, 5.555555555555555), (43, 6.111111111111111), (44, 6.666666666666667), (45, 7.222222222222222), (46, 7.777777777777778), (47, 8.333333333333334), (48, 8.88888888888889), (49, 9.444444444444445), (50, 10.0), (51, 10.555555555555555), (52, 11.11111111111111), (53, 11.666666666666666), (54, 12.222222222222221), (55, 12.777777777777779), (56, 13.333333333333334), (57, 13.88888888888889), (58, 14.444444444444445), (59, 15.0), (60, 15.555555555555555), (61, 16.11111111111111), (62, 16.666666666666668), (63, 17.22222222222222), (64, 17.77777777777778), (65, 18.333333333333332), (66, 18.88888888888889), (67, 19.444444444444443), (68, 20.0), (69, 20.555555555555557), (70, 21.11111111111111), (71, 21.666666666666668), (72, 22.22222222222222), (73, 22.77777777777778), (74, 23.333333333333332), (75, 23.88888888888889), (76, 24.444444444444443), (77, 25.0), (78, 25.555555555555557), (79, 26.11111111111111), (80, 26.666666666666668), (81, 27.22222222222222), (82, 27.77777777777778), (83, 28.333333333333332), (84, 28.88888888888889), (85, 29.444444444444443), (86, 30.0), (87, 30.555555555555557), (88, 31.11111111111111), (89, 31.666666666666668), (90, 32.22222222222222), (91, 32.77777777777778), (92, 33.333333333333336), (93, 33.888888888888886), (94, 34.44444444444444), (95, 35.0), (96, 35.55555555555556), (97, 36.111111111111114), (98, 36.666666666666664), (99, 37.22222222222222)]
